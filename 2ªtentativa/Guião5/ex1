# i -> $t0
# lista -> $t1
# lista + i -> $t2
 
 		.data
		.eqv SIZE,5
str1:		.asciiz "\nIntroduza um numero: "
 		.align 2
lista:		.space 20					 # Alinha o próximo item num endereço múltiplo de 2^n (neste cadp 2^2)
 		.eqv read_int,5
 		.eqv print_string, 4
 		.text
 		.globl main
main:
		li $t0,0					# i = 0
while:
		bge $t0,SIZE,endwhile		# i < SIZE
		
		la $a0,str1
		ori $v0,$0,print_string	
		syscall					# print_string(str1)
		
		ori $v0,$0,read_int
		syscall					# value = read_int ($t3)
		
		la $t1,lista					# $t1 =  &lista[0]
		sll $t2,$t0,2				# $t2 = i * 4
		addu $t2,$t1,$t2			# $t2 = lista + i = &lista[i]
		
		sw $v0,0($t2)				# lista[i] = read_int()
		
		addi $t0,$t0,1				# i++
		j while
endwhile:
		jr $ra
