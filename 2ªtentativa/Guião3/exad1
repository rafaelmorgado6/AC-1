# Mapa de registos:
# gray -> $t1
# bin -> $t2
# mask -> $t3

		.data
str1: 	.asciiz "Introduza um número: "
str2: 	.asciiz "\nValor em código Gray:  "
str3: 	.asciiz "\nValor em binario: "
		.eqv print_string, 4
		.eqv read_int, 5
		.eqv print_char, 11
		.text
		.globl main
main:	
		la $a0,str1
		ori $v0,$0,print_string	
		syscall					# print_string(str1)
		
		ori $v0,$0,read_int
		syscall
		move $t1,$v0				# gray = read_int ($t1)
		
		srl $t3,$t1,1				# mask = gray >> 1;	
		move $t2,$t1				# bin = gray;
		 
while:
		beqz $t3,endwhile			# mask != 0	
		
		xor $t2,$t2,$t3				# bin = bin ^ mask; 
		srl $t3,$t3,1				# mask = mask >> 1; 
			
endwhile:		
		
		la $a0,str2
		ori $v0,$0,print_string	
		syscall					# print_string(str2)
		
		move $a0,$t1				# $a0 = $t1(gray)
		ori $v0,$0,34				# $v0 = 34 (print_int16)
		syscall
		
		la $a0,str3
		ori $v0,$0,print_string	
		syscall					# print_string(str3)
		
		move $a0,$t2				# $a0 = $t2(bin)
		ori $v0,$0,34				# $v0 = 34 (print_int16)
		syscall
		
		jr $ra
