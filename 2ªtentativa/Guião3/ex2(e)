# Mapa de registos:
# value -> $t1
# bit -> $t2
# i -> $t3
# rem -> $t4
# flag -> $t5

		.data
str1: 	.asciiz "Introduza um número: "
str2: 	.asciiz "\nO valor em binário é: "
		.eqv print_string, 4
		.eqv read_int, 5
		.eqv print_char, 11
		.text
		.globl main
main:

		la $a0,str1
		ori $v0,$0,print_string	
		syscall					# print_string(str1)
		
		ori $v0,$0,read_int
		syscall
		move $t1,$v0				# value = read_int ($t1)
		
		la $a0,str2
		ori $v0,$0,print_string	
		syscall					# print_string(str2)
		
		li $t3,0					# i = 0
		li $t5,0					# flag = 0
		
do1:
		srl $t2,$t1,31				# bit = value >> 31
if2:		
		beq $t5,1,do				# flag == 1 ||
		beq $t2,0,endif2			# ||  bit != 0
do:		
		li $t5,1					# flag = 1
		
if1:
		remu $t4,$t3,4				# (i % 4)
		bne $t4,0,else1				# (i % 4) == 0)
		
		ori $a0,$0,' '
		li $v0,11	
		syscall 					# print_char(' ')
		
		
else1:		
		addi $t0,$t2,0x30			# 0x30 + bit
		
		or $a0,$0,$t0
		li $v0,11	
		syscall 					# print_char(0x30 + bit)
		
endif2:		
		sll $t1,$t1,1				# value = value << 1

		addi $t3,$t3,1				# i++
		

while1:			
		blt  $t3,32,do1			# i < 32			
		
		jr $ra	