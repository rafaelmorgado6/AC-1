# Mapa de registos
# rv : $t5
# n : $t4
# sum : $t0
# nit : $t1
# pt : $t2
	
	.data
	.eqv print_int10, 1
	.eqv print_string, 4
	.eqv read_int, 5
	.eqv SIZE, 8
list:	.space 32		# SIZE*4
str:	.asciiz "Média inválida!\n"
	.text
	.globl main
main:
	li $t0,0		# sum = 0 
	li $t1,0		# nit = 0
	
	la $t2,list		# pt = list[0]
	li $t3,SIZE		# $t3 = SIZE
	sll $t3,$t3,2		# SIZE * 4
	addu $t6,$t2,$t3	# $t6 = list + SIZE*4
	
for1:
	bge $t2,$t6,endfor1	# pt < lista + SIZE
	
	li $v0,read_int
	syscall			# read_int()
	sw $v0,0($t2)		# *pt = read_int()  coloca no conteudo do array
	
	addi $t2,$t2,4		# pt++
	j for1
endfor1:

	li $t4,0		# n = 0

for2:
	bge $t4,SIZE,endfor2	# n < SIZE

	la $t2,list		# $t2 = list[0]
	sll $t7,$t4,2		# n * 4
	addu $t2,$t2,$t7	# $t2 = &list[n]
	lw $t8,0($t2)		# $t8 = list[n]
if1:	
	blt $t8,0,endif1	# list[n] >= 0
	
	add $t0,$t0,$t8		# sum += list[n]
	addi $t1,$t1,1		# nit++
endif1:
	addiu $t4,$t4,1		# n++
	j for2
endfor2:

if2:
	ble $t1,0,else		# nit > 0
	
	div $a0,$t0,$t1		# $a0 = sum/nit
	li $v0,print_int10
	syscall			# print_int10(sum/nit)
	
	li $t5,0		# $rv = 0	
	j endif2	
else:
	la $a0,str
	li $v0,print_string
	syscall			# print_string(str)
	li $t5,-1		# rv = -1
endif2:
	move $v0,$t5		# return rv
	jr $ra