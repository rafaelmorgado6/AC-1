# Mapa de registos:
# $t0 – gray
# $t1 – bin
# $t2 - mask
 	.data
str1: 	.asciiz "\nIntroduza um numero: "
str2: 	.asciiz "\nValor em código Gray: "
str3: 	.asciiz "\nValor em binario: "
 	.text
 	.globl main
main:
	la $a0,str1 	
 	ori $v0,$0,4 	# $v0 = 4
 	syscall 	# print_string("\nIntroduza um numero: ");
 	
 	ori $v0,$0,5 	# chamada ao syscall "read_int()"
 	syscall 	
 	or $t0,$0,$v0  
 	
 	srl $t2,$t0,1	# mask = gray >> 1;
 	
 	or $t1,$0,$t0	# bin = gray;
 	
while: 	beq $t2,0,endw

	xor $t1,$t1,$t2 # bin = bin ^ mask;
	srl $t2,$t2,1
	
endw: 	 
	la $a0,str2 	
 	ori $v0,$0,4 	# $v0 = 4
 	syscall 	# print_string("\nValor em código Gray: ");
 	
 	or $a0,$0,$t1 	# chamada ao syscall "print_int16()"
 	ori $v0,$0,34 
 	syscall
 	
 	la $a0,str3 	
 	ori $v0,$0,4 	# $v0 = 4
 	syscall 	# print_string("\nValor em binario: ");
 	
 	or $a0,$0,$t0 	# chamada ao syscall "print_int16()"
 	ori $v0,$0,34 
 	syscall
 	
 	jr $ra
	

		