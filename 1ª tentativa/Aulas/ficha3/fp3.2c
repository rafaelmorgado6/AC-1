# Mapa de registos:
# $t0 – value
# $t1 – bit
# $t2 - i
 	.data
str1: 	.asciiz "Introduza um numero: "
str2: 	.asciiz "\nO valor em binário e': "
 	.text
 	.globl main
main:
	la $a0,str1 	
 	ori $v0,$0,4 	# $v0 = 4
 	syscall 	# print_string("Introduza um numero:\n");
 	
 	ori $v0,$0,5 	# chamada ao syscall "read_int()"
 	syscall 	# $t0 = $v0 = valor lido do teclado
 	or $t0,$0,$v0   #valor de x pretendido)
 	
 	la $a0,str2 	
 	ori $v0,$0,4 	# $v0 = 4
 	syscall 	# print_string("\nO valor em binário e': ");
 	
 	li $t2,0
 while:	bge $t2,32,endw	#while(i < 32)
 	
 	rem $t3,$t2,4	#i % 4
 	
 	bne $t3,0,else1	#if((i % 4) == 0)
 	
 	li $v0,11
 	li $a0,' '	# chamada ao syscall "print_char(' ')"	   
	syscall		
 else1:
 
 	andi $t1,$t0,0x80000000	# $t1 = $t0 & 0x80000000 (and bit a bit)
 		
 	beq $t1,0,else	#if(bit != 0)
 		
	li $v0,11
 	li $a0,'1'	# chamada ao syscall "print_char('1')"	   
	syscall
		
	j endif
 else:
 	li $v0,11
 	li $a0,'0' 	# chamada ao syscall "print_char('0')"	   
	syscall
 		
 endif:
 	sll $t0,$t0,1	#value = value << 1;
 	addi $t2,$t2,1	#i++;
 	j while
endw:
	jr $ra
