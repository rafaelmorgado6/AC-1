# Mapa de registos:
# $t0 – value
# $t1 – bit
# $t2 - i
# $t3 - flag 
 	.data
str1: 	.asciiz "Introduza um numero: "
str2: 	.asciiz "\nO valor em binário e': "
 	.text
 	.globl main
main:
	la $a0,str1 	
 	ori $v0,$0,4 	
 	syscall 	# print_string("Introduza um numero:\n");
 	
 	ori $v0,$0,5 	# read_int()
 	syscall 	
 	or $t0,$0,$v0   
 	
 	la $a0,str2 	
 	ori $v0,$0,4 	
 	syscall 	# print_string("\nO valor em binário e': ")
 	
 	li $t3,0	# flag=0
 	li $t2,0	# i=0
 while1:bge $t2,32,endw1	#while(i < 32)
 
 	srl $t1,$t0,31	#bit = value >> 31
 	
 if1:	beq $t3,1,then1	# if(flag == 1 |
 	bne $t1,0,then1	# | bit != 0)
 	j endif1
 	
 then1:	li $t3,1	#flag = 1	
 	
 	rem $t3,$t2,4	#i % 4
 if2:	beq $t3,0,then2	#if((i % 4) == 0)
 	j endif2	
 
 then2:	li $v0,11
 	li $a0,' '	# print_char(' ')	   
	syscall 		
 	
 endif2:
 	addi $t1,$t1,0x30
	or $a0,$0,$t1	# print_char('0' + bit)
  	li $v0,11
  	syscall
 
 endif1:
 	sll $t0,$t0,1	#value = value << 1
 	addi $t2,$t2,1	#i++
 	j while1
endw1:
	jr $ra
